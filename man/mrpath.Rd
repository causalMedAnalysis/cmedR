% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrpath.R
\name{mrpath}
\alias{mrpath}
\title{Multiply Robust (MR) Estimation for Path-specific Effects}
\usage{
mrpath(
  D,
  Y,
  M,
  C,
  data,
  d,
  dstar,
  censor = TRUE,
  censor_low = 0.01,
  censor_high = 0.99,
  interaction_DM = FALSE,
  interaction_DC = FALSE,
  interaction_MC = FALSE,
  boot = FALSE,
  boot_reps = 200,
  boot_conf_level = 0.95,
  boot_seed = NULL,
  boot_parallel = FALSE,
  boot_cores = max(c(parallel::detectCores() - 2, 1))
)
}
\arguments{
\item{D}{A character scalar identifying the name of the exposure variable in
\code{data}. \code{D} is a character string, but the exposure variable it identifies
must be numeric and binary, with two distinct values.}

\item{Y}{A character scalar identifying the name of the outcome variable in
\code{data}. \code{Y} is a character string, but the outcome variable it identifies
must be numeric.}

\item{M}{A character list (of one or more elements) identifying the names
of the mediator variables in \code{data}. If you are estimating univariate
natural effects (with a single mediator), \code{M} should be a character scalar
(i.e., a vector with only one element). If you are estimating path-specific
effects, \code{M} should be a list identifying all mediators.}

\item{C}{A character vector identifying the names of the baseline confounders
in \code{data} that you wish to include in both the mediator and outcome models.
If there are no such covariates you wish to include, leave \code{C} as its
default null argument.}

\item{data}{A data frame.}

\item{d}{The numeric value of the treatment variable that the user defines as
the treatment status. If not equal to 1, the function will recode it as 1.}

\item{dstar}{The numeric value of the treatment variable that the user defines
as the control status. If not equal to 0, the function will recode it as 0.}

\item{censor}{A logical scalar indicating whether the IPW weights constructed by
estimation procedure should be censored. By default, this value is \code{TRUE}.}

\item{censor_low, censor_high}{A pair of arguments, each a numeric scalar
denoting a probability in [0,1]. If \code{censor} is TRUE, then IPW weights below
the \code{censor_low} quantile will be bottom-coded, and weights above the
\code{censor_high} quantile will be top-coded. For example, if the default values
\code{censor_low = 0.01} and \code{censor_high = 0.99} are used, then IPW weights will
be censored at their 1st and 99th percentiles.}

\item{interaction_DM}{A logical scalar indicating whether the outcome model
should include exposure-mediator interactions (interactions of the exposure
with each mediator if there is more than one mediator in \code{M}).}

\item{interaction_DC}{A logical scalar indicating whether the outcome
model should include interactions of the exposure with each covariate in \code{C}.}

\item{interaction_MC}{A logical scalar indicating whether the outcome model
should include interactions of each mediator in \code{M} with each covariate in
\code{C}.}

\item{boot}{A logical scalar indicating whether the function should perform
the nonparametric bootstrap and return two-sided confidence intervals and
p-values.}

\item{boot_reps}{An integer scalar specifying the number of bootstrap replications
to perform.}

\item{boot_conf_level}{A numeric scalar specifying the confidence level for the
bootstrap interval.}

\item{boot_seed}{An integer scalar specifying the random-number seed used in
bootstrap resampling.}

\item{boot_parallel}{A logical scalar indicating whether the bootstrap should
be performed using a parallelized loop to reduce runtime. Parallel computation,
as implemented in this function, requires that the following R packages are installed:
\code{doParallel}, \code{doRNG}, and \code{foreach}. However, you do not need to explicitly
load these packages using \code{library()}. Note that the results of the parallelized
bootstrap may differ slightly from those of the non-parallelized bootstrap, even if
the same seed is specified, due to differences in how seeds are processed.}

\item{boot_cores}{An integer scalar specifying the number of CPU cores to use
for the parallelized bootstrap. This argument only affects computation if both
\code{boot} and \code{boot_parallel} are TRUE. By default, \code{boot_cores} is set to the greater
of two values: (a) one, and (b) the number of available CPU cores minus two.
If \code{boot_cores} equals one, the bootstrap loop will not be parallelized,
regardless of the value of \code{boot_parallel}.}
}
\value{
Based on the user's specification, \code{mrpath()} returns the
following elements:

\item{ATE:}{A numeric scalar with the estimated average total effect
for the exposure contrast \code{d - dstar}: ATE(\code{d},\code{dstar}).}
\item{PSE:}{A numeric list of length \code{length(M)+1} with the estimated
path-specific effects for the exposure contrast \code{d - dstar}. The vector is
named with the path each effect describes.}
\item{model_lst_D:}{A list of fitted treatment models, where each element corresponds
to a mediator variable. If multiple mediators are included, the list stores
separate models for each.}
\item{model_lst_Y:}{A list of models regressing the outcome on the treatment,
controls, and an increasing sequence of mediators. The first model (\code{M_1})
includes only the first mediator,the second (\code{M_2}) includes the first two,
the third (\code{M_3}) includes the first three, and so on.}

If you request the bootstrap (by setting the \code{boot} argument to TRUE), then
the function returns all of the elements listed above, as well as the
following additional elements:
\describe{
\item{ATE}{List of length 2 with bootstrap results for the Average Treatment Effect.}
\item{PSE: D -> Mk ~>Y or D -> Mk -> Y for the last mediator in the causal chain}{
List of length 2 with bootstrap results for the path-specific effect from D to Y (through Mk).}
\item{PSE:D->Y}{List of length 2 with bootstrap results for the direct effect of D on Y.}
}

Each sub-list contains:
\describe{
\item{stats}{A \code{tibble} with 1 row and 4 columns:
\describe{
\item{\code{ci}}{Character. Confidence interval as a formatted string (e.g., \code{"[-0.25, -0.031]"})}
\item{\code{pvalue}}{Numeric. P-value for the estimate.}
\item{\code{sd}}{Numeric. Standard deviation (bootstrap standard error).}
\item{\code{method_type}}{Character. A label for the estimand (e.g., \code{"ATE"}).}
}
}
\item{org_val}{A \code{tibble} with 3 columns:
\describe{
\item{\code{value}}{Numeric. The bootstrapped estimate in each iteration.}
\item{\code{method_type}}{Character. Estimand repeated for each row.}
\item{\code{boot_id}}{Integer. Bootstrap replicate ID.}
}
}
}
}
\description{
\code{mrpath()} uses a multiply robust (MR) approach to estimate path-specific effects,
and it computes inferential statistics using the nonparametric bootstrap.
If there are K causally ordered mediators, mrpath provides estimates for a direct effect
of the exposure on the outcome that does not operate through any of the mediators, and then
K path-specific effects, with each of these effects operating through one mediator, net of the
mediators preceding it in causal order. If only one mediator is specified, \code{mrpath()} computes
conventional natural direct and indirect effects.
}
\details{
\code{mrpath()} estimates path specific effects using multiply robust estimation,
and computes inferential statistics using the nonparametric bootstrap. It will
construct the multiply robust estimator based on the Type 2 estimator used in
the \code{mrmed()} function.

To compute path-specific effects with K causally ordered mediators, \code{mrpath()}
recursively estimates a series of natural direct effects (NDEs).
Specifically:
\itemize{
\item The path-specific direct effect from treatment to outcome, bypassing all mediators,
is given by \eqn{\text{PSE}_{D \to Y}(d, d^*) = \text{NDE}_{M}(d, d^*)}.
\item For each intermediate mediator \eqn{M_k}, the path-specific effect is computed
as the difference between successive NDEs:
\eqn{
  \text{PSE}_{D \to M_k \rightsquigarrow Y}(d, d^*) = \text{NDE}_{M_{k-1}}(d, d^*) - \text{NDE}_{M_k}(d, d^*).
  }
\item The first path-specific effect (from \eqn{ D \to M_1 \rightsquigarrow Y }) is equal
to the natural indirect effect for \eqn{ M_1 }, i.e.:
\eqn{
  \text{PSE}_{D \to M_1 \rightsquigarrow Y}(d, d^*) = \text{NIE}_{M_1}(d, d^*).
  }
}

Specifying the \code{M} Argument:

The \code{M} argument is a list of character vectors identifying the names of the
mediator variables. This argument is purposely a list of vectors rather than
simply a vector because it accommodates both univariate and multivariate
mediators treated as a set. To explain, let's start with a simple example.

Suppose you have two single mediators, named \code{ever_unemp_age3539} and
\code{log_faminc_adj_age3539}, where \code{ever_unemp_age3539} causally precedes
\code{log_faminc_adj_age3539}. In this case, you would use the following syntax:
\code{M = list("ever_unemp_age3539", "log_faminc_adj_age3539")}.

Now, let's say you have a third mediator, named \code{m3}. You believe that
\code{ever_unemp_age3539} causally precedes both \code{log_faminc_adj_age3539} and
\code{m3}, but you are unwilling to make an assumption about the relative causal
order of \code{log_faminc_adj_age3539} and \code{m3} (whether \code{log_faminc_adj_age3539}
causally precedes \code{m3} or vice versa). In that case, you could treat
\code{log_faminc_adj_age3539} and \code{m3} as a whole, using the following syntax:
\code{M = list("ever_unemp_age3539", c("log_faminc_adj_age3539", "m3"))}.

Note that the order of the elements in the \code{c("log_faminc_adj_age3539", "m3")}
vector does not matter (it could alternatively be written as
\code{c("m3", "log_faminc_adj_age3539")}). But the order of the vectors in the
list does matter. And in this example, the mediator identified by the first
element in the list, the \code{"ever_unemp_age3539"} scalar, is assumed to
causally precede the two mediators collectively identified by the second
element in the list, the \code{c("log_faminc_adj_age3539", "m3")} vector.

Finally, note that if one of your mediators is a nominal factor variable, we
recommend that you dummy-encode the levels of the factor and treat the dummy
variables as a multivariate whole. For instance, let's say that you have a
fourth mediator, which causally follows \code{ever_unemp_age3539},
\code{log_faminc_adj_age3539}, and \code{m3}. This fourth mediator is a nominal
variable with four levels. If you create numeric dummy variables for three
levels (omitting a reference level), named \code{level2}, \code{level3}, \code{level4},
then you can use the following syntax for the \code{M} argument:
\code{M = list("ever_unemp_age3539", c("log_faminc_adj_age3539", "m3"), c("level2","level3","level4"))}.
}
\examples{
# ----------------------------- #
#     Data and shared setup     #
# ----------------------------- #
data(nlsy)

covariates <- c(
  "female",
  "black",
  "hispan",
  "paredu",
  "parprof",
  "parinc_prank",
  "famsize",
  "afqt3"
)

key_variables <- c(
  "cesd_age40",
  "ever_unemp_age3539",
  "log_faminc_adj_age3539",
  "att22",
  covariates
)

# For convenience in examples, use complete cases
nlsy_ex <- nlsy[complete.cases(nlsy[, key_variables]), ]
nlsy_ex$std_cesd_age40 <-
  (nlsy_ex$cesd_age40 - mean(nlsy_ex$cesd_age40)) /
  sd(nlsy_ex$cesd_age40)

# ----------------------------------------- #
# Example 1: Two mediators, additive models #
# ----------------------------------------- #
mrpath(
  data = nlsy_ex,
  D = "att22",
  M = list("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  d = 1,
  dstar = 0,
  boot = FALSE
)

# -------------------------------------------------- #
# Example 2: Two mediators, models with interactions #
# -------------------------------------------------- #
mrpath(
  data = nlsy_ex,
  D = "att22",
  M = list("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  d = 1,
  dstar = 0,
  interaction_DM = TRUE,
  interaction_DC = TRUE,
  interaction_MC = TRUE
)

# --------------------------- #
# Example 3: Single mediator  #
# Returns ATE, NDE, and NIE   #
# --------------------------- #
mrpath(
  data = nlsy_ex,
  D = "att22",
  M = "ever_unemp_age3539",
  Y = "std_cesd_age40",
  C = covariates,
  d = 1,
  dstar = 0
)

# ----------------------------------------- #
# Example 4: Bootstrap with parallelization #
# ----------------------------------------- #
mrpath(
  data = nlsy_ex,
  D = "att22",
  M = list("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  d = 1,
  dstar = 0,
  boot = TRUE,
  boot_reps = 200,
  boot_seed = 1234,
  boot_parallel = FALSE
)

# ------------------------------------------- #
# Example 5: Three mediators, additive models #
# ------------------------------------------- #

key_variables5 <- c(
  "cesd_age40","cesd_1992","ever_unemp_age3539",
  "log_faminc_adj_age3539","att22", covariates
)
nlsy_ex5 <- nlsy[complete.cases(nlsy[, key_variables5]), ]
nlsy_ex5$std_cesd_age40 <-
  (nlsy_ex5$cesd_age40 - mean(nlsy_ex5$cesd_age40)) /
  sd(nlsy_ex5$cesd_age40)

mrpath(
  data = nlsy_ex5,
  D = "att22",
  M = list("cesd_1992","ever_unemp_age3539","log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  d = 1,
  dstar = 0
)

}
