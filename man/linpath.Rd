% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linpath.R
\name{linpath}
\alias{linpath}
\title{Linear models estimator for path-specific effects}
\usage{
linpath(
  data,
  D,
  M,
  Y,
  C = NULL,
  d = 1,
  dstar = 0,
  interaction_DM = FALSE,
  interaction_DC = FALSE,
  interaction_MC = FALSE,
  weights_name = NULL,
  boot = FALSE,
  boot_reps = 1000,
  boot_conf_level = 0.95,
  boot_seed = NULL,
  boot_parallel = FALSE,
  boot_cores = max(c(parallel::detectCores() - 2, 1))
)
}
\arguments{
\item{data}{A data frame.}

\item{D}{A character scalar identifying the name of the exposure variable in
\code{data}. \code{D} is a character string, but the exposure variable it identifies
must be numeric.}

\item{M}{A list of character vectors identifying the names of the mediator
variables in \code{data}. Each element of the list must consist of either (a) a
character scalar with the name of a single mediator or (b) a character
vector with the names of a group of mediators you wish to treat as a whole.
And the elements must be arranged in the list in causal order, starting
from the first in the hypothesized causal sequence to the last. Also, note
that \code{M} is a list of character vectors, but the mediator variables they
identify must each be numeric. See 'Details' for a guide on specifying the
\code{M} argument.}

\item{Y}{A character scalar identifying the name of the outcome variable in
\code{data}. \code{Y} is a character string, but the outcome variable it identifies
must be numeric.}

\item{C}{A character vector (of one or more elements) identifying the names
of the covariate variables in \code{data} that you wish to include in both the
mediator and outcome models. If there are no such covariates you wish to
include, leave \code{C} as its default null argument.}

\item{d, dstar}{A pair of arguments, each a numeric scalar denoting a specific
value of the exposure \code{D}. The exposure contrast of interest is
\code{d - dstar}.}

\item{interaction_DM}{A logical scalar indicating whether the outcome model
should include exposure-mediator interactions (interactions of the exposure
with each mediator if there is more than one mediator in \code{M}).}

\item{interaction_DC}{A logical scalar indicating whether both the outcome
model and each of the mediator models should include interactions of the
exposure with each covariate in \code{C}.}

\item{interaction_MC}{A logical scalar indicating whether the outcome model
should include interactions of each mediator in \code{M} with each covariate in
\code{C}.}

\item{weights_name}{A character scalar identifying the name of the weights
variable in \code{data}, if applicable (e.g., if you have---and want to
use---sampling weights).}

\item{boot}{A logical scalar indicating whether the function will perform the
nonparametric bootstrap and return two-sided confidence intervals and
p-values.}

\item{boot_reps}{An integer scalar for the number of bootstrap replications
to perform.}

\item{boot_conf_level}{A numeric scalar for the confidence level of the
bootstrap interval.}

\item{boot_seed}{An integer scalar specifying the random-number seed used in
bootstrap resampling.}

\item{boot_parallel}{A logical scalar indicating whether the bootstrap will
be performed with a parallelized loop, with the goal of reducing runtime.
Parallelized computing, as implemented in this function, requires that you
have each of the following R packages installed: \code{doParallel}, \code{doRNG}, and
\code{foreach}. (However, you do not need to load/attach these three packages
with the \code{library} function prior to running this function.) Note that the
results of the parallelized bootstrap may differ slightly from the
non-parallelized bootstrap, even if you specify the same seed, due to
differences in how the seed is processed by the two methods.}

\item{boot_cores}{An integer scalar specifying the number of CPU cores on
which the parallelized bootstrap will run. This argument only has an effect
if you requested a parallelized bootstrap (i.e., only if \code{boot} is TRUE and
\code{boot_parallel} is TRUE). By default, \code{boot_cores} is equal to the greater
of two values: (a) one and (b) the number of available CPU cores minus two.
If \code{boot_cores} equals one, then the bootstrap loop will not be
parallelized (regardless of whether \code{boot_parallel} is TRUE).}
}
\value{
By default, \code{linpath()} returns a list with the following elements:
\item{ATE}{A numeric scalar with the estimated total average treatment effect
for the exposure contrast \code{d - dstar}: ATE(\code{d},\code{dstar}).}
\item{PSE}{A numeric vector, of length \code{length(M)+1}, with the estimated
path-specific effects for the exposure contrast \code{d - dstar}. The vector is
named with the path each effect describes.}
\item{miss_summary}{A data frame with counts of non-missing (\code{nmiss}) and
missing (\code{miss}) observations for each of the variables specified for \code{D},
\code{M}, \code{Y}, and \code{C}.}
\item{model_m}{A list of fitted mediator models, where each element corresponds
to a mediator variable. If multiple mediators are included, the list stores
separate models for each.}
\item{models_y}{A list of models regressing the outcome on the treatment,
controls, and an increasing sequence of mediators. The first model (\code{M1})
includes only the first mediator,the second (\code{M1:M2}) includes the first two,
the third (\code{M1:M3}) includes the first three, and so on.}

If you request the bootstrap (by setting the \code{boot} argument to TRUE), then
the function returns all of the elements listed above, as well as the
following additional elements:
\item{ci_ATE}{A numeric vector with the bootstrap confidence interval for the
total average treatment effect (ATE).}
\item{ci_PSE}{A numeric matrix with the bootstrap confidence interval for
each path-specific effect (PSE).}
\item{pvalue_ATE}{A numeric scalar with the p-value from a two-sided test of
whether the ATE is different from zero, as computed from the bootstrap.}
\item{pvalue_PSE}{A numeric matrix with each p-value from a two-sided test of
whether the PSE is different from zero, as computed from the bootstrap.}
\item{boot_ATE}{A numeric vector of length \code{boot_reps} comprising the ATE
estimates from all replicate samples created in the bootstrap.}
\item{boot_PSE}{A numeric matrix, of \code{length(M)+1} columns and \code{boot_reps}
rows, comprising all PSE estimates from all replicate samples created in
the bootstrap.}
}
\description{
\code{linpath()} uses the product-of-coefficients estimator, based on linear
models, to estimate the total effect (ATE) and path-specific effects (PSEs).
}
\details{
\code{linpath()} estimates path-specific effects by fitting linear models for the mediators
and outcome, and it computes inferential statistics using the nonparametric bootstrap.
If there are K causally ordered mediators, linpath provides estimates for: a direct effect
of the exposure on the outcome that does not operate through any of the mediators, and then
K path-specific effects, with each of these effects operating through one mediator, net of the
mediators preceding it in causal order. If only one mediator is specified, \code{linpath()} computes
conventional natural direct and indirect effects.

To compute path-specific effects with K causally ordered mediators, linpath proceeds as follows:
For k = 1, 2, . . ., K: (i) it fits a linear model for the kth mediator conditional on the
exposure and baseline confounders; (ii) it then fits a linear model for the outcome conditional
on the exposure, baseline confounders, and all the mediators in Mk=\{M1,...,Mk\}; and (iii),
it calculates the path-specific effects using coefficients from the mediator
and outcome models.

Specifying the \code{M} Argument:

The \code{M} argument is a list of character vectors identifying the names of the
mediator variables. This argument is purposely a list of vectors rather than
simply a vector because it accommodates both univariate and multivariate
mediators. To explain, let's start with a simple example.

Suppose you have two single mediators, named \code{ever_unemp_age3539} and
\code{log_faminc_adj_age3539}, where \code{ever_unemp_age3539} causally precedes
\code{log_faminc_adj_age3539}. In this case, you would use the following syntax:
\code{M = list("ever_unemp_age3539", "log_faminc_adj_age3539")}.

Now, let's say you have a third mediator, named \code{m3}. You believe that
\code{ever_unemp_age3539} causally precedes both \code{log_faminc_adj_age3539} and
\code{m3}. But you are unwilling to make an assumption about the relative causal
order of \code{log_faminc_adj_age3539} and \code{m3} (whether \code{log_faminc_adj_age3539}
causally precedes \code{m3} or vice versa). In that case, you could treat
\code{log_faminc_adj_age3539} and \code{m3} as a whole, using the following syntax:
\code{M = list("ever_unemp_age3539", c("log_faminc_adj_age3539", "m3"))}.

Note that the order of the elements in the \code{c("log_faminc_adj_age3539", "m3")}
vector does not matter (it could alternatively be written as
\code{c("m3", "log_faminc_adj_age3539")}). But the order of the vectors in the
list does matter. And in this example, the mediator identified by the first
element in the list, the \code{"ever_unemp_age3539"} scalar, is assumed to
causally precede the two mediators collectively identified by the second
element in the list, the \code{c("log_faminc_adj_age3539", "m3")} vector.

Finally, note that if one of your mediators is a nominal factor variable, we
recommend that you dummy-encode the levels of the factor and treat the dummy
variables as a multivariate whole. For instance, let's say that you have a
fourth mediator, which causally follows \code{ever_unemp_age3539},
\code{log_faminc_adj_age3539}, and \code{m3}. This fourth mediator is a nominal
variable with four levels. If you create numeric dummy variables for three
levels (omitting a reference level), named \code{level2}, \code{level3}, \code{level4},
then you can use the following syntax for the \code{M} argument:
\code{M = list("ever_unemp_age3539", c("log_faminc_adj_age3539", "m3"), c("level2", "level3","level4"))}.
}
\examples{
# Example 1: Two mediators, additive models
## Prepare data
## For convenience with this example, we will use complete cases
data(nlsy)
covariates <- c(
  "female",
  "black",
  "hispan",
  "paredu",
  "parprof",
  "parinc_prank",
  "famsize",
  "afqt3"
)
key_variables <- c(
  "cesd_age40",
  "ever_unemp_age3539",
  "log_faminc_adj_age3539",
  "att22",
  covariates
)
nlsy <- nlsy[complete.cases(nlsy[,key_variables]),]
nlsy$std_cesd_age40 <-
  (nlsy$cesd_age40 - mean(nlsy$cesd_age40)) /
  sd(nlsy$cesd_age40)
## Estimate path-specific effects
linpath(
  data = nlsy,
  D = "att22",
  M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
  # ^ note that this order encodes our assumption that ever_unemp_age3539
  # causally precedes log_faminc_adj_age3539
  Y = "std_cesd_age40",
  C = covariates
)

# Example 2: With exposure-mediator, exposure-covariate, and
# mediator-covariate interactions
linpath(
  data = nlsy,
  D = "att22",
  M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  interaction_DM = TRUE,
  interaction_DC = TRUE,
  interaction_MC = TRUE
)

# Example 3: If you specify only a single mediator, the function will return
# the natural effects (NDE and NIE), in addition to the ATE
linpath(
  data = nlsy,
  D = "att22",
  M = "ever_unemp_age3539",
  Y = "std_cesd_age40",
  C = covariates
)

# Example 4: Incorporating sampling weights
linpath(
  data = nlsy,
  D = "att22",
  M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  weights_name = "weight"
)

# Example 5: Perform a nonparametric bootstrap, with 2,000 replications
\dontrun{
  linpath(
    data = nlsy,
    D = "att22",
    M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
    Y = "std_cesd_age40",
    C = covariates,
    boot = TRUE,
    boot_reps = 2000,
    boot_seed = 1234
  )
}

# Example 6: Parallelize the bootstrap, to attempt to reduce runtime
\dontrun{
  linpath(
    data = nlsy,
    D = "att22",
    M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
    Y = "std_cesd_age40",
    C = covariates,
    boot = TRUE,
    boot_reps = 2000,
    boot_seed = 1234,
    boot_parallel = TRUE
  )
}

# Example 7: Three mediators, additive models
# Prepare data
key_variables7 <- c(
  "cesd_age40","cesd_1992","ever_unemp_age3539",
  "log_faminc_adj_age3539","att22", covariates
)
df_ex7 <- nlsy[complete.cases(nlsy[, key_variables7]), ]
df_ex7$std_cesd_age40 <-
  (df_ex7$cesd_age40 - mean(df_ex7$cesd_age40)) /
  sd(df_ex7$cesd_age40)

# Estimate path-specific effects
linpath(
  data = df_ex7,
  D = "att22",
  M = c("cesd_1992","ever_unemp_age3539","log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates
)

}
