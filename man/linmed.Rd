% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linmed.R
\name{linmed}
\alias{linmed}
\title{Linear models estimator for natural effects}
\usage{
linmed(
  data,
  D,
  M,
  Y,
  C = NULL,
  d = 1,
  dstar = 0,
  m = rep(0, length(M)),
  interaction_DM = FALSE,
  interaction_DC = FALSE,
  interaction_MC = FALSE,
  weights_name = NULL,
  boot = FALSE,
  boot_reps = 1000,
  boot_conf_level = 0.95,
  boot_seed = NULL,
  boot_parallel = FALSE,
  boot_cores = max(c(parallel::detectCores() - 2, 1))
)
}
\arguments{
\item{data}{A data frame.}

\item{D}{A character scalar identifying the name of the exposure variable in
\code{data}. \code{D} is a character string, but the exposure variable it identifies
must be numeric.}

\item{M}{A character vector (of one or more elements) identifying the names
of the mediator variables in \code{data}. If you are estimating univariate
natural effects (with a single mediator), \code{M} should be a character scalar
(a vector with only one element)---e.g., \code{M = "ever_unemp_age3539"}. If you
are estimating multivariate natural effects (with multiple mediators), \code{M}
should be a character vector identifying all of the mediators---e.g.,
\code{M = c("ever_unemp_age3539", "log_faminc_adj_age3539")}. Also note that \code{M}
is a character vector, but the mediator variable(s) it identifies must each
be numeric.}

\item{Y}{A character scalar identifying the name of the outcome variable in
\code{data}. \code{Y} is a character string, but the outcome variable it identifies
must be numeric.}

\item{C}{A character vector (of one or more elements) identifying the names
of the covariate variables in \code{data} that you wish to include in both the
mediator and outcome models. If there are no such covariates you wish to
include, leave \code{C} as its default null argument.}

\item{d, dstar}{A pair of arguments, each a numeric scalar denoting a specific
value of the exposure \code{D}. The exposure contrast of interest is
\code{d - dstar}.}

\item{m}{A numeric vector (of one or more elements) denoting specific values
to set each of the mediators in \code{M} to, for estimating the CDE. The length
of the vector MUST be the same as the length of the vector \code{M}.
This argument is only used in the estimation of the CDE, not in any of the
other returned estimands.}

\item{interaction_DM}{A logical scalar indicating whether the outcome model
should include exposure-mediator interactions (interactions of the exposure
with each mediator if there is more than one mediator in \code{M}).}

\item{interaction_DC}{A logical scalar indicating whether both the outcome
model and each of the mediator models should include interactions of the
exposure with each covariate in \code{C}.}

\item{interaction_MC}{A logical scalar indicating whether the outcome model
should include interactions of each mediator in \code{M} with each covariate in
\code{C}.}

\item{weights_name}{A character scalar identifying the name of the weights
variable in \code{data}, if applicable (e.g., if you have---and want to
use---sampling weights).}

\item{boot}{A logical scalar indicating whether the function will perform the
nonparametric bootstrap and return two-sided confidence intervals and
p-values.}

\item{boot_reps}{An integer scalar for the number of bootstrap replications
to perform.}

\item{boot_conf_level}{A numeric scalar for the confidence level of the
bootstrap interval.}

\item{boot_seed}{An integer scalar specifying the random-number seed used in
bootstrap resampling.}

\item{boot_parallel}{A logical scalar indicating whether the bootstrap will
be performed with a parallelized loop, with the goal of reducing runtime.
Parallelized computing, as implemented in this function, requires that you
have each of the following R packages installed: \code{doParallel}, \code{doRNG}, and
\code{foreach}. (However, you do not need to load/attach these three packages
with the \code{library} function prior to running this function.) Note that the
results of the parallelized bootstrap may differ slightly from the
non-parallelized bootstrap, even if you specify the same seed, due to
differences in how the seed is processed by the two methods.}

\item{boot_cores}{An integer scalar specifying the number of CPU cores on
which the parallelized bootstrap will run. This argument only has an effect
if you requested a parallelized bootstrap (i.e., only if \code{boot} is TRUE and
\code{boot_parallel} is TRUE). By default, \code{boot_cores} is equal to the greater
of two values: (a) one and (b) the number of available CPU cores minus two.
If \code{boot_cores} equals one, then the bootstrap loop will not be
parallelized (regardless of whether \code{boot_parallel} is TRUE).}
}
\value{
By default, \code{linmed()} returns a list with the following elements:
\item{ATE}{A numeric scalar with the estimated total average treatment effect
for the exposure contrast \code{d - dstar}: ATE(\code{d},\code{dstar}).}
\item{NDE}{A numeric scalar with the estimated natural direct effect for the
exposure contrast \code{d - dstar}: NDE(\code{d},\code{dstar}).}
\item{NIE}{A numeric scalar with the estimated natural indirect effect for
the exposure contrast \code{d - dstar}: NIE(\code{d},\code{dstar}).}
\item{CDE}{A numeric scalar with the estimated controlled direct effect for
the exposure contrast \code{d - dstar} and the mediator value(s) \code{m}:
CDE(\code{d},\code{dstar},\code{m}).}
\item{model_m}{A list with the model objects from each of the fitted mediator
models.}
\item{model_y}{The model object from the fitted outcome model.}
\item{miss_summary}{A data frame with counts of non-missing (\code{nmiss}) and
missing (\code{miss}) observations for each of the variables specified for \code{D},
\code{M}, \code{Y}, and \code{C}.}

If you request the bootstrap (by setting the \code{boot} argument to TRUE), then
the function returns all of the elements listed above, as well as the
following additional elements:
\item{ci_ATE}{A numeric vector with the bootstrap confidence interval for the
total average treatment effect (ATE).}
\item{ci_NDE}{A numeric vector with the bootstrap confidence interval for the
natural direct effect (NDE).}
\item{ci_NIE}{A numeric vector with the bootstrap confidence interval for the
natural indirect effect (NIE).}
\item{ci_CDE}{A numeric vector with the bootstrap confidence interval for the
controlled direct effect (CDE).}
\item{pvalue_ATE}{A numeric scalar with the p-value from a two-sided test of
whether the ATE is different from zero, as computed from the bootstrap.}
\item{pvalue_NDE}{A numeric scalar with the p-value from a two-sided test of
whether the NDE is different from zero, as computed from the bootstrap.}
\item{pvalue_NIE}{A numeric scalar with the p-value from a two-sided test of
whether the NIE is different from zero, as computed from the bootstrap.}
\item{pvalue_CDE}{A numeric scalar with the p-value from a two-sided test of
whether the CDE is different from zero, as computed from the bootstrap.}
\item{boot_ATE}{A numeric vector of length \code{boot_reps} comprising the ATE
estimates from all replicate samples created in the bootstrap.}
\item{boot_NDE}{A numeric vector of length \code{boot_reps} comprising the NDE
estimates from all replicate samples created in the bootstrap.}
\item{boot_NIE}{A numeric vector of length \code{boot_reps} comprising the NIE
estimates from all replicate samples created in the bootstrap.}
\item{boot_CDE}{A numeric vector of length \code{boot_reps} comprising the CDE
estimates from all replicate samples created in the bootstrap.}
}
\description{
\code{linmed()} uses a product-of-coefficients estimator, based on linear
models for the mediator(s) and outcome, to estimate the total effect (ATE),
natural direct effect (NDE), natural indirect effect (NIE), and controlled direct effect (CDE).
The function supports estimation of both univariate and multivariate natural effects.
}
\details{
\code{linmed()} performs causal mediation analysis using linear models for both the mediator(s)
and outcome, and computes inferential statistics using the nonparametric bootstrap. When a
single mediator is specified, it estimates total, natural direct, natural indirect,
and controlled direct effects using two linear models: a model for the mediator conditional
on treatment and baseline covariates after centering them around their sample means, and
a model for the outcome conditional on treatment, the mediator, and the baseline covariates
after centering them around their sample means.

When multiple mediators are specified, \code{linmed()} provides estimates for the total effect and then
for the multivariate natural direct and indirect effects operating through the entire set of
mediators considered together. To this end, it fits separate models for each mediator conditional
on treatment and the baseline covariates after centering them around their sample means, and then
a model for the outcome conditional on treatment, all the mediators, and the baseline covariates
after centering them around their sample means.
}
\examples{
# Example 1: Single mediator, no interactions
## Prepare data
data(nlsy)

covariates <- c(
  "female",
  "black",
  "hispan",
  "paredu",
  "parprof",
  "parinc_prank",
  "famsize",
  "afqt3"
)

nlsy1 <- nlsy
key_variables1 <- c(
  "cesd_age40",
  "ever_unemp_age3539",
  "att22",
  covariates
)

nlsy1 <- nlsy1[complete.cases(nlsy1[,key_variables1]),]
nlsy1$std_cesd_age40 <-
  (nlsy1$cesd_age40 - mean(nlsy1$cesd_age40)) /
  sd(nlsy1$cesd_age40)

## Estimate natural effects
linmed(
  data = nlsy1,
  D = "att22",
  M = "ever_unemp_age3539",
  Y = "std_cesd_age40",
  C = covariates
  )

# Example 2: With exposure-mediator, exposure-covariate, and
# mediator-covariate interactions
linmed(
  data = nlsy1,
  D = "att22",
  M = "ever_unemp_age3539",
  Y = "std_cesd_age40",
  C = covariates,
  interaction_DM = TRUE,
  interaction_DC = TRUE,
  interaction_MC = TRUE
)

# Example 3: Specifying a mediator value for the CDE other than (the default)
# zero
linmed(
  data = nlsy1,
  D = "att22",
  M = "ever_unemp_age3539",
  Y = "std_cesd_age40",
  C = covariates,
  m = 1
)

# Example 4: Incorporating sampling weights
linmed(
  data = nlsy1,
  D = "att22",
  M = "ever_unemp_age3539",
  Y = "std_cesd_age40",
  C = covariates,
  weights_name = "weight"
)

# Example 5: Multiple mediators
## Prepare data
nlsy2 <- nlsy
key_variables2 <- c(
  key_variables1,
  "log_faminc_adj_age3539"
)
nlsy2 <- nlsy2[complete.cases(nlsy2[,key_variables2]),]
nlsy2$std_cesd_age40 <-
  (nlsy2$cesd_age40 - mean(nlsy2$cesd_age40)) /
  sd(nlsy2$cesd_age40)
## Estimate natural effects
linmed(
  data = nlsy2,
  D = "att22",
  M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates
)

# Example 6: Specifying mediator values for the CDE, with multiple mediators
linmed(
  data = nlsy2,
  D = "att22",
  M = c("ever_unemp_age3539", "log_faminc_adj_age3539"),
  Y = "std_cesd_age40",
  C = covariates,
  m = c(1, 3.5)
)

# Example 7: Perform a nonparametric bootstrap, with 2,000 replications
\dontrun{
  linmed(
    data = nlsy1,
    D = "att22",
    M = "ever_unemp_age3539",
    Y = "std_cesd_age40",
    C = covariates,
    boot = TRUE,
    boot_reps = 2000,
    boot_seed = 1234
  )
}

# Example 8: Parallelize the bootstrap, to attempt to reduce runtime
\dontrun{
  linmed(
    data = nlsy1,
    D = "att22",
    M = "ever_unemp_age3539",
    Y = "std_cesd_age40",
    C = covariates,
    boot = TRUE,
    boot_reps = 2000,
    boot_seed = 1234,
    boot_parallel = TRUE
  )
}
}
