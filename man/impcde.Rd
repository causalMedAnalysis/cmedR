% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impcde.R
\name{impcde}
\alias{impcde}
\title{Controlled direct effect regression imputation estimator}
\usage{
impcde(
  data,
  model_y,
  D,
  M,
  d = 1,
  dstar = 0,
  m = 0,
  weights_name = NULL,
  boot = FALSE,
  boot_reps = 1000,
  boot_conf_level = 0.95,
  boot_seed = NULL,
  boot_parallel = FALSE,
  boot_cores = max(c(parallel::detectCores() - 2, 1))
)
}
\arguments{
\item{data}{A data frame.}

\item{model_y}{A model object for the fitted outcome model.}

\item{D}{A character scalar identifying the name of the exposure variable in
\code{data}.}

\item{M}{A character scalar identifying the name of the mediator variable in
\code{data}.}

\item{d, dstar}{A pair of arguments, each a numeric scalar denoting a specific
value of the exposure \code{D}. The exposure contrast of interest is
\code{d - dstar}.}

\item{m}{A numeric scalar denoting a specific value to set the mediator \code{M}
to, for estimating the CDE.}

\item{weights_name}{A character scalar identifying the name of the weights
variable in \code{data}, if applicable (e.g., if you have---and want to
use---sampling weights).}

\item{boot}{A logical scalar indicating whether the function will perform the
nonparametric bootstrap and return a two-sided confidence interval and
p-value.}

\item{boot_reps}{An integer scalar for the number of bootstrap replications
to perform.}

\item{boot_conf_level}{A numeric scalar for the confidence level of the
bootstrap interval.}

\item{boot_seed}{An integer scalar specifying the random-number seed used in
bootstrap resampling.}

\item{boot_parallel}{A logical scalar indicating whether the bootstrap will
be performed with a parallelized loop, with the goal of reducing runtime.
Parallelized computing, as implemented in this function, requires that you
have each of the following R packages installed: \code{doParallel}, \code{doRNG}, and
\code{foreach}. (However, you do not need to load/attach these three packages
with the \code{library} function prior to running this function.) Note that the
results of the parallelized bootstrap may differ slightly from the
non-parallelized bootstrap, even if you specify the same seed, due to
differences in how the seed is processed by the two methods.}

\item{boot_cores}{An integer scalar specifying the number of CPU cores on
which the parallelized bootstrap will run. This argument only has an effect
if you requested a parallelized bootstrap (i.e., only if \code{boot} is TRUE and
\code{boot_parallel} is TRUE). By default, \code{boot_cores} is equal to the greater
of two values: (a) one and (b) the number of available CPU cores minus two.
If \code{boot_cores} equals one, then the bootstrap loop will not be
parallelized (regardless of whether \code{boot_parallel} is TRUE).}
}
\value{
By default, \code{impcde()} returns a numeric scalar with the estimated
controlled direct effect for the exposure contrast \code{d - dstar} and the
mediator value \code{m}: CDE(\code{d},\code{dstar},\code{m}).

If, however, you request the bootstrap (by setting the \code{boot} argument to
TRUE), then the function instead returns a list with the following elements:
\item{CDE}{A numeric scalar with the point estimate for the CDE.}
\item{ci_CDE}{A numeric vector with the bootstrap confidence interval for the
CDE.}
\item{pvalue_CDE}{A numeric scalar with the p-value from a two-sided test of
whether the CDE is different from zero, as computed from the bootstrap.}
\item{boot_CDE}{A numeric vector of length \code{boot_reps} comprising the CDE
estimates from all replicate samples created in the bootstrap.}
}
\description{
\code{impcde()} estimates the controlled direct effect (CDE) with a regression
imputation estimator.
}
\details{
\code{impcde()} fits a single model for the outcome conditional on treatment, the mediator,
and baseline covariates. This model can be any in the family of GLMs. The outcome model
is then used to construct regression imputation estimates for the controlled direct effect.
Inferential statistics are computed using the nonparametric bootstrap.
}
\examples{
# Example 1
## Prepare data
## For convenience with this example, we will use complete cases
data(nlsy)
covariates <- c(
  "female",
  "black",
  "hispan",
  "paredu",
  "parprof",
  "parinc_prank",
  "famsize",
  "afqt3"
)
key_variables <- c(
  "cesd_age40",
  "ever_unemp_age3539",
  "att22",
  covariates
)
nlsy <- nlsy[complete.cases(nlsy[,key_variables]),]
nlsy$std_cesd_age40 <-
  (nlsy$cesd_age40 - mean(nlsy$cesd_age40)) /
  sd(nlsy$cesd_age40)
## Fit model
mod1 <- lm(
  std_cesd_age40 ~ ever_unemp_age3539 + att22 +
    female+black+hispan+paredu+parprof+parinc_prank+famsize+afqt3,
  data = nlsy
)
## Estimate CDE for m=1
impcde(
  data = nlsy,
  model_y = mod1,
  D = "att22",
  M = "ever_unemp_age3539",
  m = 1
)

# Example 2: Incorporating sampling weights
## Re-fit model with sampling weights
mod2 <- lm(
  std_cesd_age40 ~ ever_unemp_age3539 + att22 +
    female+black+hispan+paredu+parprof+parinc_prank+famsize+afqt3,
  data = nlsy,
  weights = nlsy$weight
)
## Estimate CDE for m=1
impcde(
  data = nlsy,
  model_y = mod2,
  D = "att22",
  M = "ever_unemp_age3539",
  m = 1,
  weights_name = "weight"
)

# Example 3: Perform a nonparametric bootstrap, with 2,000 replications
\dontrun{
  impcde(
    data = nlsy,
    model_y = mod1,
    D = "att22",
    M = "ever_unemp_age3539",
    m = 1,
    boot = TRUE,
    boot_reps = 2000,
    boot_seed = 1234
  )
}

# Example 4: Parallelize the bootstrap, to attempt to reduce runtime
\dontrun{
  impcde(
    data = nlsy,
    model_y = mod1,
    D = "att22",
    M = "ever_unemp_age3539",
    m = 1,
    boot = TRUE,
    boot_reps = 2000,
    boot_seed = 1234,
    boot_parallel = TRUE
  )
}
}
